n, m = map(int, input().split())
INF = int(1e9)
G = [[INF]*(n+1) for _ in range(n+1)]

for a in range(1, n + 1): #자기자신에서 자기자신으로 가는 비용은 0
    for b in range(1, n + 1):
        if a == b:
            G[a][b] = 0

for _ in range(m):
    a, b = map(int, input().split()) # A에서 B로 가는 비용은 1
    G[a][b] = 1

for k in range(1, n + 1): #플로이드 워셜 알고리즘
    for a in range(1, n + 1):
        for b in range(1, n + 1):
            G[a][b] = min(G[a][b], G[a][k] + G[k][b])

result = 0
for i in range(1, n + 1): # 각 학생을 번호에 따라 한 명씩 확인하며 도달 가능한지 확인
    count = 0
    for j in range(1, n + 1):
        if G[i][j] != INF or G[j][i] != INF:
            count += 1

    if count == n:
        result += 1

print(result)
